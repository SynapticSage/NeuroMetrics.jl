let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
let NERDTreeMapPreviewSplit = "gi"
let Tlist_Exit_OnlyWindow =  0 
let NERDTreeShowHidden =  0 
let Tlist_Show_One_File =  0 
let NERDTreeMinimalUI =  0 
let WebDevIconsNerdTreeGitPluginForceVAlign =  1 
let NERDTreeRespectWildIgnore =  0 
let NERDTreeMapToggleHidden = "I"
let NERDTreeWinSize =  31 
let UltiSnipsRemoveSelectModeMappings =  1 
let LanguageClient_loaded =  1 
let NERDTreeMapMenu = "m"
let JuliaFormatter_sysimage_path = "/home/ryoung/.vim/plugged/JuliaFormatter.vim/scripts/juliaformatter.so"
let NERDTreeMapJumpParent = "p"
let ScreenImpl = "Tmux"
let NERDTreeCascadeOpenSingleChildDir =  1 
let NERDTreeShowBookmarks =  0 
let NERDTreeMouseMode =  1 
let NERDTreeCreatePrefix = "silent"
let Tlist_Display_Prototype =  0 
let NERDTreeMapOpenSplit = "i"
let JuliaFormatter_root = "/home/ryoung/.vim/plugged/JuliaFormatter.vim"
let NERDTreeShowLineNumbers =  0 
let NERDTreeHighlightCursorline =  1 
let UltiSnipsEnableSnipMate =  1 
let Tlist_GainFocus_On_ToggleOpen =  0 
let Tlist_Auto_Update =  1 
let Lf_StlColorscheme = "one"
let NERDTreeMapPreviewVSplit = "gs"
let NERDTreeMapJumpRoot = "P"
let NERDTreeGlyphReadOnly = "RO"
let NERDTreeAutoDeleteBuffer =  0 
let NERDTreeMapRefreshRoot = "R"
let NERDTreeAutoCenter =  1 
let NERDTreeMapOpenVSplit = "s"
let UltiSnipsDebugHost = "localhost"
let NERDTreeMapDeleteBookmark = "D"
let Tlist_File_Fold_Auto_Close =  0 
let UltiSnipsEditSplit = "vertical"
let NERDTreeMapJumpFirstChild = "K"
let VM_Cursor_hl = "Cursor"
let LanguageClient_autoStart =  1 
let NERDTreeMapToggleBookmarks = "B"
let WebDevIconsTabAirLineBeforeGlyphPadding = " "
let Tlist_Sort_Type = "order"
let Tlist_Enable_Fold_Column =  1 
let Tlist_Compact_Format =  0 
let NERDTreeBookmarksFile = "/home/ryoung/.NERDTreeBookmarks"
let UltiSnipsJumpForwardTrigger = "<C-j>"
let VM_Extend_hl = "Visual"
let Tlist_Ctags_Cmd = "ctags"
let DevIconsEnableDistro =  1 
let LanguageClient_serverStatusMessage = ""
let Taboo_tabs = "2	Timeshift\n"
let NERDTreeMapCustomOpen = "<CR>"
let NERDTreeDirArrowExpandable = "▸"
let WebDevIconsUnicodeDecorateFileNodes =  1 
let UltiSnipsPMDebugBlocking =  0 
let Tlist_Display_Tag_Scope =  1 
let NERDTreeMapOpenInTabSilent = "T"
let NERDTreeMapHelp = "?"
let NERDTreeMapJumpPrevSibling = "<C-k>"
let NERDTreeMapOpenInTab = "t"
let NERDTreeChDirMode =  0 
let Tlist_Highlight_Tag_On_BufEnter =  1 
let NERDTreeAutoCenterThreshold =  3 
let NERDTreeShowFiles =  1 
let NERDTreeHijackNetrw =  1 
let Tlist_Max_Submenu_Items =  20 
let NERDTreeBookmarksSort =  1 
let NERDTreeNaturalSort =  0 
let JuliaFormatter_loaded =  1 
let NERDTreeMinimalMenu =  0 
let Tlist_WinWidth =  30 
let Tlist_Close_On_Select =  0 
let NERDTreeUpdateOnCursorHold =  1 
let DevIconsDefaultFolderOpenSymbol = ""
let UltiSnipsJumpBackwardTrigger = "<C-k>"
let NERDTreeSortDirs =  1 
let NERDTreeMapToggleFiles = "F"
let UltiSnipsDebugPort =  8080 
let NERDTreeMapOpenRecursively = "O"
let NERDTreeMapUpdirKeepOpen = "U"
let Tlist_Show_Menu =  0 
let Tlist_Use_SingleClick =  0 
let UltiSnipsUsePythonVersion =  3 
let NERDTreeMapCloseDir = "x"
let NERDTreeSortHiddenFirst =  1 
let UltiSnipsExpandTrigger = "<C-j>"
let DevIconsEnableFoldersOpenClose =  0 
let NERDTreeUseTCD =  0 
let JuliaFormatter_log = "/home/ryoung/.vim/plugged/JuliaFormatter.vim/scripts/juliaformatter.log"
let WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol = ""
let NERDTreeMapPreview = "go"
let NERDTreeCascadeSingleChildDir =  1 
let DevIconsEnableFolderPatternMatching =  1 
let VM_Insert_hl = "Cursor"
let TagList_title = "__Tag_List__"
let WebDevIconsTabAirLineAfterGlyphPadding = ""
let NERDTreeRemoveDirCmd = "rm -rf "
let WebDevIconsUnicodeDecorateFileNodesDefaultSymbol = ""
let NERDTreeGitStatusUpdateOnCursorHold =  1 
let NERDTreeCaseSensitiveSort =  0 
let NERDTreeMapRefresh = "r"
let WebDevIconsUnicodeByteOrderMarkerDefaultSymbol = ""
let DevIconsAppendArtifactFix =  0 
let WebDevIconsUnicodeDecorateFolderNodes =  1 
let UltiSnipsDebugServerEnable =  0 
let WebDevIconsUnicodeGlyphDoubleWidth =  1 
let Bold = ""
let Tlist_Max_Tag_Length =  10 
let UltiSnipsListSnippets = "<c-tab>"
let Tlist_Auto_Open =  0 
let NERDTreeMapChangeRoot = "C"
let DevIconsEnableFolderExtensionPatternMatching =  0 
let NERDTreeMapOpenExpl = "e"
let NERDTreeMapCloseChildren = "X"
let Italic = ""
let Tlist_Auto_Highlight_Tag =  1 
let WebDevIconsUnicodeDecorateFolderNodesExactMatches =  1 
let Tlist_Use_Horiz_Window =  0 
let NERDTreeMenuUp = "k"
let WebDevIconsNerdTreeAfterGlyphPadding = " "
let Tlist_Process_File_Always =  0 
let NERDTreeNotificationThreshold =  100 
let NERDTreeMapActivateNode = "o"
let NERDTreeWinPos = "left"
let NERDTreeStatusline = "%{exists('b:NERDTree')?b:NERDTree.root.path.str():''}"
let NERDTreeMapToggleFilters = "f"
let NERDTreeNodeDelimiter = ""
let VM_Mono_hl = "Cursor"
let LanguageClient_serverStatus =  0 
let DevIconsArtifactFixChar = " "
let Tlist_WinHeight =  10 
let Tlist_Inc_Winwidth =  1 
let NERDTreeMapCWD = "CD"
let WebDevIconsNerdTreeBeforeGlyphPadding = " "
let NERDTreeMenuDown = "j"
let NERDTreeMapUpdir = "u"
let WebDevIconsUnicodeDecorateFolderNodesSymlinkSymbol = ""
let NERDTreeMapChdir = "cd"
let NERDTreeMapToggleZoom = "A"
let NERDTreeMarkBookmarks =  1 
let NERDTreeMapJumpLastChild = "J"
let NERDTreeMapJumpNextSibling = "<C-j>"
let NERDTreeCopyCmd = "cp -r "
let NERDTreeMapQuit = "q"
let NERDTreeDirArrowCollapsible = "▾"
let DevIconsEnableNERDTreeRedraw =  0 
let NERDTreeQuitOnOpen =  0 
let Tlist_Use_Right_Window =  0 
silent only
silent tabonly
cd ~/Code/projects/goal-code
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
set shortmess=aoO
badd +99 scripts/timeshift/TimeShift.jl
badd +14 scripts/decode/Initialize.jl
badd +7 scripts/fields/Initialize.jl
badd +10 scripts/fields/Include.jl
badd +153 src/Load.jl
badd +16 src/Load/spikes.jl
badd +2 src/Load/behavior.jl
badd +8 src/Load/ripples.jl
badd +4 src/Load/utils.jl
badd +191 src/Timeshift.jl
badd +296 src/Timeshift/checkpoint.jl
badd +2 src/Table/convert_types.jl
badd +1 src/Table.jl
badd +16 src/Utils/dict.jl
badd +132 src/Utils/namedtup.jl
badd +1 src/Timeshift/Keys.jl
badd +36 src/GoalFetchAnalysis.jl
badd +1 scripts/timeshift/plot_experiment_with_data.jl
badd +30 scripts/timeshift/Initialize.jl
badd +29 scripts/timeshift/Initialize_plot_experimentation.jl
badd +1 scripts/timeshift/plot_timeshif_vs_theta_phase.jl
badd +1 scripts/timeshift/plot_examine_set_of_fields.jl
badd +3 src/Table/group.jl
badd +191 src/Timeshift/operation.jl
badd +23 src/Plot/timeshift.jl
badd +20 src/Plot.jl
badd +2 src/Plot/raster.jl
badd +1 src/Plot/table.jl
badd +20 src/Munge.jl
badd +25 scripts/timeshift/notebook/Initialize_plot_experimentation_pluto.jl
badd +3197 Manifest.toml
badd +127 Project.toml
badd +2 src/Load/celltet.jl
badd +22 src/Field.jl
badd +15 src/Load/task.jl
badd +5 src/Munge/task.jl
badd +1 scripts/fields/PlaceField.jl
badd +69 _research/test_enforce_bound.jl
badd +12 src/Field/adaptive.jl
badd +26 ~/tmp.jl
badd +20 src/Precompile.jl
badd +67 src/Timeshift/shuffle.jl
badd +11497 ~/.cache/nvim/lsp.log
badd +18 src/Field/fixed.jl
badd +2 src/Utils/plot.jl
badd +290 src/Shuf.jl
badd +1 src/Filt.jl
badd +8 src/Field/model.jl
badd +1 src/Field/operation.jl
badd +1 _research/tensor_test.jl
badd +3 _research/test_filt.jl
badd +19 _research/test_shifting_timediff.jl
badd +1 plots/fields/shift.shorter/GOAL_TRAJ_LEN_heatmap_x=shift,y=cellsort_by=area.pdf
badd +1 src/Field/preset.jl
badd +170 src/Field/legacy.jl
badd +1 src/Timeshift/legacy.jl
badd +44 src/Field/metrics.jl
badd +15 src/Field/recon_process.jl
badd +1 src/Timeshift/crossval.jl
badd +89 notebooks/TimeshiftDiff.jl
badd +6 src/Munge/chrono.jl
badd +11 src/Utils/macros.jl
badd +28 notebooks/CacheShifts.jl
badd +19 scripts/timeshift/TimeShift_setsOfInterest.jl
badd +268 src/Plot/rf.jl
badd +46 src/Timeshift/types.jl
badd +118 notebooks/Examine_LoadMains.jl
badd +193 src/Utils.jl
badd +25 src/Munge/tensor.jl
badd +3 src/Munge/spikes.m
badd +79 src/Munge/spiking.jl
badd +173 ~/Code/utilities/+units/getRateMatrix.m
badd +118 ~/Code/utilities/+units/sparseToDense.m
badd +23 src/Utils/filtreg.jl
badd +4 src/Utils/binning.jl
badd +1 _research/test_convexhull.jl
badd +79 scripts/decode/StillRipplePlots.jl
badd +1 scripts/decode/VideoPerRipple.jl
badd +1 scripts/decode/InitializeCairo.jl
badd +1 src/Table/smooth.jl
badd +1 src/Field/coactivity.jl
badd +1 src/Table/type.jl
badd +1 src/Field/recon.jl
badd +9 src/Plot/receptivefield.jl
badd +8 _research/test_coactivity.jl
badd +13 src/Timeshift/metrics.jl
badd +288 ~/.julia/packages/StatsBase/OpnQp/src/signalcorr.jl
badd +1 notebooks/ExamineCoactivity.jl
badd +1 src/Table/clean.jl
badd +1 test/runtests.jl
argglobal
%argdel
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabrewind
edit src/Timeshift/legacy.jl
argglobal
balt src/Timeshift.jl
let s:l = 74 - ((60 * winheight(0) + 31) / 63)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 74
normal! 0
tabnext
edit src/Timeshift/crossval.jl
argglobal
balt src/Timeshift/types.jl
let s:l = 1 - ((0 * winheight(0) + 20) / 40)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 0
tabnext
edit src/Timeshift/metrics.jl
argglobal
balt _research/test_convexhull.jl
let s:l = 11 - ((10 * winheight(0) + 20) / 40)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 11
normal! 07|
tabnext
edit src/Timeshift/checkpoint.jl
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
argglobal
balt src/Filt.jl
let s:l = 70 - ((15 * winheight(0) + 14) / 29)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 70
normal! 05|
tabnext 4
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
let g:this_session = v:this_session
let g:this_obsession = v:this_session
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
